{"version":3,"sources":["../EventBus.tsx","../provideComponent.ts","index.tsx"],"names":[],"mappings":";AA6FC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,QAAA,YAAA,QAAA,MAAA,QAAA,gBAAA,QAAA,cAAA,EA3FD,MAAM,EAAQ,OAAO,OACf,cAAE,EAAF,WAAiB,EAAjB,UAA6B,EAA7B,OAAwC,GAAW,EAEzD,SAAgB,EAAS,GACjB,MAAA,EAAkB,EAMtB,CACY,WAAA,GACY,uBAAA,GACA,uBAAA,KAGpB,EAAU,EAAqB,CACnC,GAAI,CAAC,EAAM,KACT,EAAgB,QAAQ,GAAM,KAAK,GAC5B,WACL,EAAgB,QAAQ,GAAS,EAAgB,QAC/C,GACQ,OAAQ,GAAY,IAAO,KAGzC,SAAW,IACT,EAAgB,QAAQ,EAAM,MAAM,QAAS,GAC3C,EAAS,OAMb,OAAA,EAAA,cAAC,QAAA,aAAa,SAAQ,CAAC,MAAO,EAAQ,SACnC,EAAM,UAKb,SAAgB,IACP,OAAA,EACJ,OAAe,cAIpB,SAAgB,EACd,EACA,GAEM,MAAA,EAAU,IAEhB,EAAU,IACD,EAAQ,GAAG,EAAM,GACvB,CAAC,EAAS,EAAU,IAGzB,SAAgB,IACP,OAAA,IAAkB,SAtD3B,QAAA,SAAA,EAoCA,QAAA,gBAAA,EAMA,QAAA,MAAA,EAWA,QAAA,YAAA,EA8Ba,QAAA,aAAe,EAAmC,MAE/D,MAAM,EAAmB,OACpB,EAAiB,eACpB,EAAiB,aAAe,QAAA;;AC1FlC,aAAA,SAAgB,EAAiB,GAC9B,SAAS,cAAsB,iBAAiB,GADnD,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,sBAAA,EAAA,QAAA,iBAAA;;ACuCA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAzCA,MAAA,EAAA,QAAA,eACA,EAAA,QAAA,uBAEM,EAAQ,OAAO,OACf,SAAE,GAAa,EAErB,SAAS,IACD,MAAC,EAAO,GAAY,EAAmB,IAO3C,OALF,EAAA,MAAM,WAAa,GACjB,EAAU,GAAa,CAAC,EAAM,WAAY,KAI1C,EAAA,cAAA,MAAA,CACE,MAAO,CACL,QAAS,OACT,QAAS,OACT,cAAe,SACf,SAAU,SACV,OAAQ,SAGV,EAAA,cAAA,IAAA,CAAG,MAAO,CAAE,KAAM,aAAY,cAC9B,EAAA,cAAA,KAAA,MACA,EAAA,cAAA,MAAA,CACE,MAAO,CAAE,KAAM,WAAY,SAAU,OAAQ,OAAQ,SAEpD,EAAM,IAAI,CAAC,EAAG,IACb,EAAA,cAAC,EAAM,SAAQ,CAAC,IAAK,GACnB,EAAA,cAAA,MAAA,KACE,EAAA,cAAA,QAAA,KAAQ,IAEV,EAAA,cAAA,KAAA,UAQZ,EAAA,iBAAiB","file":"index.js","sourceRoot":"..\\..\\src\\step-4\\feed","sourcesContent":["import { ReactNode } from \"react\";\r\n\r\nconst React = window.React;\r\nconst { createContext, useContext, useEffect, useRef } = React;\r\n\r\nexport function EventBus(props: { children: ReactNode }) {\r\n  const listenersByType = useRef<\r\n    {\r\n      [key in keyof EventPayloadsByType]: ((\r\n        payload: EventPayloadsByType[key]\r\n      ) => void)[];\r\n    }\r\n  >({\r\n    \"new-post\": [],\r\n    \"provide-current-user\": [],\r\n    \"request-current-user\": [],\r\n  });\r\n\r\n  const context = useRef<EventContext>({\r\n    on: (type, callback) => {\r\n      listenersByType.current[type].push(callback as any);\r\n      return function off() {\r\n        listenersByType.current[type] = (listenersByType.current[\r\n          type\r\n        ] as any).filter((cb: any) => cb !== callback);\r\n      };\r\n    },\r\n    dispatch: (event) => {\r\n      listenersByType.current[event.type].forEach((listener: any) =>\r\n        listener(event)\r\n      );\r\n    },\r\n  });\r\n\r\n  return (\r\n    <EventContext.Provider value={context.current}>\r\n      {props.children}\r\n    </EventContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useEventContext() {\r\n  return useContext(\r\n    (window as any).EventContext as typeof EventContext\r\n  )!;\r\n}\r\n\r\nexport function useOn<T extends keyof EventPayloadsByType>(\r\n  type: T,\r\n  callback: (payload: EventPayloadsByType[T]) => void\r\n) {\r\n  const context = useEventContext();\r\n\r\n  useEffect(() => {\r\n    return context.on(type, callback);\r\n  }, [context, callback, type]);\r\n}\r\n\r\nexport function useDispatch() {\r\n  return useEventContext().dispatch;\r\n}\r\n\r\nexport type EventPayloadsByType = {\r\n  \"new-post\": {\r\n    type: \"new-post\";\r\n    content: string;\r\n  };\r\n  \"request-current-user\": {\r\n    type: \"request-current-user\";\r\n  };\r\n  \"provide-current-user\": {\r\n    type: \"provide-current-user\";\r\n    user: string;\r\n  };\r\n};\r\n\r\ntype EventContext = {\r\n  on: <T extends keyof EventPayloadsByType>(\r\n    type: T,\r\n    callback: (payload: EventPayloadsByType[T]) => void\r\n  ) => () => void;\r\n  dispatch: <\r\n    T extends EventPayloadsByType[keyof EventPayloadsByType]\r\n  >(\r\n    event: T\r\n  ) => void;\r\n};\r\n\r\nexport const EventContext = createContext<EventContext | null>(null);\r\n\r\nconst assignableWindow = window as any;\r\nif (!assignableWindow.EventContext) {\r\n  assignableWindow.EventContext = EventContext;\r\n}\r\n","import { ComponentType } from \"react\";\r\n\r\nexport function provideComponent(component: ComponentType) {\r\n  (document.currentScript as any).resolveComponent(component);\r\n}\r\n","import { useOn } from \"../EventBus\";\r\nimport { provideComponent } from \"../provideComponent\";\r\n\r\nconst React = window.React;\r\nconst { useState } = React;\r\n\r\nfunction Feed() {\r\n  const [posts, setPosts] = useState<string[]>([]);\r\n\r\n  useOn(\"new-post\", (event) =>\r\n    setPosts((oldPosts) => [event.content, ...oldPosts])\r\n  );\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \"1rem\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        overflow: \"hidden\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <p style={{ flex: \"0 0 auto\" }}>Startseite</p>\r\n      <hr />\r\n      <div\r\n        style={{ flex: \"1 1 auto\", overflow: \"auto\", height: \"100%\" }}\r\n      >\r\n        {posts.map((p, index) => (\r\n          <React.Fragment key={index}>\r\n            <div>\r\n              <small>{p}</small>\r\n            </div>\r\n            <hr />\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nprovideComponent(Feed);\r\n"]}